{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/content.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","console","log","id","className","type","data-toggle","data-target","href","data","map","d","i","link","name","Header","title","paragraph","linkeName","Features","description","features","src","image","alt","text","Content","position","initialState","email","message","Contact","useState","facebook","twitter","youtube","rel","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Menu","Content1","Content2","Content3","Features1","Roadmap","Team","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.39ab0567.chunk.js","sourcesContent":["export const Navigation = (props) => {\n  console.log(props)\n\n  return (\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\n      <div className='container'>\n        <div className='navbar-header'>\n          <button\n            type='button'\n            className='navbar-toggle collapsed'\n            data-toggle='collapse'\n            data-target='#bs-example-navbar-collapse-1'\n          >\n            {' '}\n            <span className='sr-only'>Toggle navigation</span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n            <span className='icon-bar'></span>{' '}\n          </button>\n          <a className='navbar-brand page-scroll' href='#page-top'>\n          </a>{' '}\n        </div>\n\n        <div\n          className='collapse navbar-collapse'\n          id='bs-example-navbar-collapse-1'\n        >\n          <ul className='nav navbar-nav navbar-right'>\n\n          {props.data\n            ? props.data.map((d, i) => (\n              <li>\n                <a href={`#${d.link}`} className='page-scroll'>\n                  {`${d.name}`}\n                </a>\n              </li>\n              ))\n            : 'Loading...'}\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n","export const Header = (props) => {\n  return (\n    <header id='header'>\n      <div className='intro'>\n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href={props.data ? props.data.link : 'Loading'}\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  {props.data ? props.data.linkeName : 'Loading'}\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  )\n}\n","export const Features = (props) => {\n  return (\n    <div  id={props.data ? props.data.id : \"features\"} className='features text-center'>\n      <div className='container'>\n        <div className='col-md-10 col-md-offset-1 section-title'>\n          <h2>{props.data ? props.data.title : \"Features\"}</h2>\n          \n          <p>{props.data ? props.data.description : \"\"}\n          </p>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.features.map((d, i) => (\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-3 features-section'>\n                  {' '}\n                  <img src={d.image ? d.image : \"\"} className=\"img-responsive\" alt=\"\" />\n                  <h3>{d.title}</h3>\n                  <p>{d.text}</p>\n                </div>\n              ))\n            : 'Loading...'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Content = (props) => {\n  if(props.data){\n    if(props.data.position  === 'right'){\n      return (\n        <div id={props.data ? props.data.id : \"content\"} className=\"content\">\n          <div className=\"container\">\n  \n          <div className=\"row\">\n                  <div className=\"col-xs-12 col-md-6\">\n                    {\" \"}\n                    <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />{\" \"}\n                  </div>\n                  <div className=\"col-xs-12 col-md-6\">\n                    <div className=\"title-text\">\n                      <h2>{props.data ? props.data.title : \"loading...\"}</h2>\n                      <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n                    </div>\n                  </div>\n          </div>\n          </div>\n        </div>\n      );\n    }else{\n      if(props.data.position  === 'left'){\n        return (\n          <div id={props.data ? props.data.id : \"content\"} className=\"content\">\n            <div className=\"container\">\n            <div className=\"row\">\n                      <div className=\"col-xs-12 col-md-6\">\n                        <div className=\"title-text\">\n                          <h2>{props.data ? props.data.title : \"loading...\"}</h2>\n                          <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n                        </div>\n                      </div>\n                      <div className=\"col-xs-12 col-md-6\">\n                        {\" \"}\n                        <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />{\" \"}\n                      </div>\n                    </div>\n            </div>\n          </div>\n        );\n      }else{  \n        return (\n          <div id={props.data ? props.data.id : \"content\"} className=\"content\">\n            <div className=\"container\">\n            <div className=\"row\">\n                      <div className=\"col-xs-12 col-md-12\">\n                        <div className=\"title-text-centered\">\n                          <h2>{props.data ? props.data.title : \"loading...\"}</h2>\n                          <p>{props.data ? props.data.paragraph : \"loading...\"}</p>\n                        </div>\n                      </div>\n              </div>\n            <div className=\"row\">\n                      <div className=\"col-xs-12 col-md-12\">\n                        {\" \"}\n                        <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />{\" \"}\n                      </div>\n              </div>\n            </div>\n          </div>\n        );\n        \n      }\n    }\n  }else{\n    return (   \n    <div id={props.data ? props.data.id : \"content\"} className=\"content\">\n    <div className=\"container\">\n    <div className=\"row\">\n              <div className=\"col-xs-12 col-md-6\">\n                <div className=\"title-text\">\n                  <h2>{props.data ? props.data.title : \"loading...\"}</h2>\n                </div>\n              </div>\n            </div>\n    </div>\n  </div>)\n  }\n\n};\n","import { useState } from 'react'\n\nconst initialState = {\n  name: '',\n  email: '',\n  message: '',\n}\nexport const Contact = (props) => {\n  const [{ name, email, message }, setState] = useState(initialState)\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n    setState((prevState) => ({ ...prevState, [name]: value }))\n  }\n  const clearState = () => setState({ ...initialState })\n\n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-12'>\n            <div className='row'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Please fill out the form below to send us an email and we will\n                  get back to you as soon as possible.\n                </p>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.facebook : '/'}>\n                      <i className='fa fa-facebook'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.twitter : '/'}>\n                      <i className='fa fa-twitter'></i>\n                    </a>\n                  </li>\n                  <li>\n                    <a href={props.data ? props.data.youtube : '/'}>\n                      <i className='fa fa-youtube'></i>\n                    </a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2020 Issaaf Kattan React Land Page Template. Design by{' '}\n            <a href='http://www.templatewire.com' rel='nofollow'>\n              TemplateWire\n            </a>\n          </p>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from \"react\";\nimport { Navigation } from \"./components/navigation\";\nimport { Header } from \"./components/header\";\nimport { Features } from \"./components/features\";\nimport { Content } from \"./components/content\";\nimport { Contact } from \"./components/contact\";\nimport JsonData from \"./data/data.json\";\nimport SmoothScroll from \"smooth-scroll\";\nimport \"./App.css\";\n\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\n  speed: 500,\n  speedAsDuration: true,\n});\n\nconst App = () => {\n  const [landingPageData, setLandingPageData] = useState({});\n  useEffect(() => {\n    setLandingPageData(JsonData);\n  }, []);\n\n  return (\n    <div>\n      <Navigation data={landingPageData.Menu} />\n\n      <Header data={landingPageData.Header} />\n\n      <Content data={landingPageData.Content1}/>\n      <Content data={landingPageData.Content2}/>\n      <Content data={landingPageData.Content3}/>\n\n      <Features data={landingPageData.Features1} />\n      <Features data={landingPageData.Roadmap} />\n      <Features data={landingPageData.Team} />\n\n      <Contact data={landingPageData.Contact} />\n    </div>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}