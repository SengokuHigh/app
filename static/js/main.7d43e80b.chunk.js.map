{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/features.jsx","components/features2.jsx","components/featureSlider.jsx","components/content.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","console","log","id","className","type","data-toggle","data-target","href","class","data","map","d","i","link","name","Header","logo","src","alt","logoText","logoSubText","title","paragraph","text","links","linkeName","image","Features","subtitle","description1","features","description2","FeaturesV2","texts","FeatureSlider","slidesPerRow","arrows","dots","autoplay","autoplaySpeed","Content","position","initialState","email","message","Contact","useState","twitter","instagram","discord","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","Menu","Story","Character","Styles","Roadmap","Team","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.7d43e80b.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  console.log(props)\r\n\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n          </a>{' '}<div class=\"vertical-line\"></div>\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n\r\n          {props.data\r\n            ? props.data.map((d, i) => (\r\n              <li>\r\n                <a href={`#${d.link}`} className='page-scroll'>\r\n                  {`${d.name}`}\r\n                </a>\r\n              </li>\r\n              ))\r\n            : 'Loading...'}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","export const Header = (props) => {\r\n  return (\r\n    <header id='header'>\r\n      <div className='intro'>\r\n        <div className='overlay'>\r\n        <div className='overlay2'>\r\n          <div className='container'>\r\n            <div className='row'>\r\n              <div className='col-xs-12 col-md-6 intro-text'>\r\n              <div className='intro-text-overlay'>\r\n              {(props.data && props.data.logo) ? <img src={props.data.logo} className=\"img-responsive logo\" alt=\"\" /> : \"\"}  \r\n\r\n\r\n                    \r\n                <h1 className =\"logo-text\">\r\n                  {props.data ? props.data.logoText : 'Loading'}\r\n                  <span></span>\r\n                </h1>\r\n                <h2 className =\"logo-subtext\">\r\n                  {props.data ? props.data.logoSubText : 'Loading'}\r\n                  <span></span>\r\n                </h2>\r\n                <h2>\r\n                  {props.data ? props.data.title : 'Loading'}\r\n                  <span></span>\r\n                </h2>\r\n                  {props.data\r\n                        ? props.data.paragraph.map((d, i) => (\r\n                          <p>{d ? d.text : 'Loading'}</p>\r\n                          ))\r\n                        : 'Loading...'}\r\n\r\n                    {props.data\r\n                        ? props.data.links.map((d, i) => (\r\n                          <a \r\n                          id={(d && d.link) ? d.id : \"intro-button-id\"} \r\n                          href={d ? d.link : 'Loading'}\r\n                          className='btn btn-custom btn-lg page-scroll intro-button'\r\n                        >\r\n                          {d ? d.linkeName : 'Loading'}\r\n                        </a>\r\n                          ))\r\n                        : 'Loading...'}\r\n                        </div>\r\n              </div>\r\n              <div className='col-xs-12 col-md-6'>\r\n                <img src={props.data ? props.data.image : \"\"} className=\"img-responsive intro-image\" alt=\"\" />{\" \"}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n","export const Features = (props) => {\r\n  return (\r\n    <div  id={props.data ? props.data.id : \"features\"} className='features text-center'>\r\n    <div className='overlay'>\r\n      <div className='container'>\r\n\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n\r\n        <h2 className=\"title\">{props.data ? props.data.title : \"Features\"}</h2>\r\n        <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n          <p>{props.data ? props.data.description1 : \"\"}</p>\r\n          <div className='row'>\r\n            {props.data\r\n            ? props.data.features.map((d, i) => (\r\n              <div className='col-xs-6 col-md-1 features-section-wrapper'>\r\n                <div key={`${d.title}-${i}`} className='features-section'>\r\n                  {' '}\r\n                  <img src={d.image ? d.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                  <h3 className=\"title\">{d.title}</h3>\r\n                  <h3 className=\"subtitle\">{d.subtitle}</h3>\r\n                  <p>{d.text}</p>\r\n                </div>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n          </div>\r\n\r\n           <p>{props.data ? props.data.description2 : \"\"} </p>\r\n\r\n           </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","export const FeaturesV2 = (props) => {\r\n  return (\r\n    <div  id={props.data ? props.data.id : \"features\"} className='features text-center'>\r\n    <div className='overlay'>\r\n      <div className='container'>\r\n\r\n        <div className='col-md-10 col-md-offset-1 section-title'>\r\n\r\n\r\n        <h2 className=\"title\">{props.data ? props.data.title : \"Features\"}</h2>\r\n        <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n          <p>{props.data ? props.data.description1 : \"\"}</p>\r\n          <div className='row'>\r\n            {props.data\r\n            ? props.data.features.map((d, i) => (\r\n              <div className='col-xs-6 col-md-1 features-section-wrapper'>\r\n                <div key={`${d.title}-${i}`} className='col-xs-6 col-md-1 features-section'>\r\n                  {' '}\r\n                  <img src={d.image ? d.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                  <h3>{d.title}</h3>\r\n                  <p>{d.texts.map((text, i) => (<p>{text.text}</p>))}</p>\r\n\r\n                  </div>\r\n                </div>\r\n              ))\r\n            : 'Loading...'}\r\n          </div>\r\n\r\n           <p>{props.data ? props.data.description2 : \"\"} </p>\r\n\r\n           </div>\r\n        </div>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","\r\nimport Slider from 'infinite-react-carousel';\r\n\r\nexport const FeatureSlider = (props) => {\r\n  return (\r\n    <div  id={props.data ? props.data.id : \"features\"} className='features text-center'>\r\n    <div className='overlay'>\r\n      <div className='container'>\r\n\r\n        <h2 className=\"title\">{props.data ? props.data.title : \"Features\"}</h2>\r\n        <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n          \r\n          <p>{props.data ? props.data.description1 : \"\"}</p>\r\n          {props.data?\r\n            <Slider slidesPerRow=\"3\" arrows=\"false\" dots=\"false\" autoplay=\"true\" autoplaySpeed=\"3000\" >\r\n            {props.data\r\n                ? props.data.features.map((d, i) => (\r\n                  <div  className='col-xs-6 col-md-3 features-section-wrapper'>\r\n                    <div key={`${d.title}-${i}`} className='features-section'>\r\n                      {' '}\r\n                      <img src={d.image ? d.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                      <h3 className=\"title\">{d.title}</h3>\r\n                      <h3 className=\"subtitle\">{d.subtitle}</h3>\r\n                      <p>{d.text}</p>\r\n                    </div>\r\n                  </div>\r\n                  ))\r\n                : 'Loading...'}\r\n          </Slider>\r\n          : \"\"}\r\n          <p>{props.data ? props.data.description2 : \"\"}\r\n          </p>\r\n      </div>\r\n      </div>\r\n\r\n\r\n      \r\n    </div>\r\n\r\n\r\n\r\n\r\n  )\r\n}\r\n","\r\nexport const Content = (props) => {\r\n  if(props.data){\r\n    if(props.data.position  === 'right'){\r\n      return (\r\n        <div id={props.data ? props.data.id : \"content\"} className=\"content\">\r\n        <div className='overlay'>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n                  <div className=\"col-xs-12 col-md-6 left\">\r\n                    <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                  </div>\r\n                  <div className=\"col-xs-12 col-md-6 right\">\r\n                    <div>\r\n                      <h2 className=\"title\">{props.data ? props.data.title : \"loading...\"}</h2>\r\n                      <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n\r\n                      {props.data\r\n                        ? props.data.paragraph.map((d, i) => (\r\n                          <p className='para'>\r\n                            <h3>title</h3>\r\n                          <h3>{`${d.title}`}</h3>{`${d.text}`}</p>\r\n                          ))\r\n                        : 'Loading...'}\r\n                      \r\n                    </div>\r\n                  </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }else{\r\n      if(props.data.position  === 'left'){\r\n        return (\r\n          <div id={props.data ? props.data.id : \"content\"} className=\"content\">\r\n          <div className='overlay'>\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                      <div className=\"col-xs-12 col-md-6 left\">\r\n                        <div className=\"title-text\">\r\n                      <h2 className=\"title\">{props.data ? props.data.title : \"loading...\"}</h2>\r\n                      <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n                      {props.data\r\n                        ? props.data.paragraph.map((d, i) => (\r\n                          <p className='para'>\r\n                          <h3>{`${d.title}`}</h3>{`${d.text}`}</p>\r\n                          ))\r\n                        : 'Loading...'}\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"col-xs-12 col-md-6 right\">\r\n                        <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                      </div>\r\n                    </div>\r\n            </div>\r\n            </div>\r\n          </div>\r\n        );\r\n      }else{  \r\n        return (\r\n          <div id={props.data ? props.data.id : \"content\"} className=\"content\"> \r\n          <div className='overlay'>\r\n            <div className=\"container\">\r\n            <div className=\"row\">\r\n                      <div className=\"col-xs-12 col-md-12 center\">\r\n                        <div className=\"title-text-centered\">\r\n                      <h2 className=\"title\">{props.data ? props.data.title : \"loading...\"}</h2>\r\n                      <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n                      {props.data\r\n                        ? props.data.paragraph.map((d, i) => (\r\n                          <p className='para'>\r\n                          <h3>{`${d.title}`}</h3>{`${d.text}`}</p>\r\n                          ))\r\n                        : 'Loading...'}\r\n                        </div>\r\n                      </div>\r\n              </div>\r\n            <div className=\"row\">\r\n                      <div className=\"col-xs-12 col-md-12\">\r\n                        <img src={props.data ? props.data.image : \"\"} className=\"img-responsive\" alt=\"\" />\r\n                      </div>\r\n              </div>\r\n              </div></div>\r\n          </div>\r\n        );\r\n        \r\n      }\r\n    }\r\n  }else{\r\n    return (   \r\n    <div id={props.data ? props.data.id : \"content\"} className=\"content\">\r\n    <div className='overlay'>\r\n    <div className=\"container\">\r\n    <div className=\"row\">\r\n              <div className=\"col-xs-12 col-md-6\">\r\n                <div className=\"title-text\">\r\n                      <h2 className=\"title\">{props.data ? props.data.title : \"loading...\"}</h2>\r\n                      <h2 className=\"subtitle\">{props.data ? props.data.subtitle : \"loading...\"}</h2>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            </div>\r\n    </div>\r\n  </div>)\r\n  }\r\n\r\n};\r\n","import { useState } from 'react'\r\n\r\nconst initialState = {\r\n  name: '',\r\n  email: '',\r\n  message: '',\r\n}\r\nexport const Contact = (props) => {\r\n  const [{ name, email, message }, setState] = useState(initialState)\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target\r\n    setState((prevState) => ({ ...prevState, [name]: value }))\r\n  }\r\n  const clearState = () => setState({ ...initialState })\r\n\r\n  return (\r\n    <div>\r\n      <div id='contact'>\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <h2>Get In Touch</h2>\r\n              <div className='social'>\r\n                <ul>\r\n                  <li>\r\n                    <a href={props.data ? props.data.twitter : '/'}>\r\n                      <i className='fab fa-twitter'></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={props.data ? props.data.instagram : '/'}>\r\n                      <i className='fab fa-instagram'></i>\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a href={props.data ? props.data.discord : '/'}>\r\n                      <i className='fab fa-discord'></i>\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n            &copy; 2021 Sengoku High\r\n              </div>\r\n            </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { Navigation } from \"./components/navigation\";\r\nimport { Header } from \"./components/header\";\r\nimport { Features } from \"./components/features\";\r\nimport { FeaturesV2 } from \"./components/features2\";\r\nimport { FeatureSlider } from \"./components/featureSlider\";\r\nimport { Content } from \"./components/content\";\r\n\r\nimport { Contact } from \"./components/contact\";\r\nimport JsonData from \"./data/data.json\";\r\nimport SmoothScroll from \"smooth-scroll\";\r\nimport \"./App.css\";\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 500,\r\n  speedAsDuration: true,\r\n});\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({});\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData);\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Navigation data={landingPageData.Menu} />\r\n      <Header data={landingPageData.Header} />\r\n\r\n      <Content data={landingPageData.Story}/>\r\n\r\n      <FeatureSlider data={landingPageData.Character} />\r\n      <Features data={landingPageData.Styles} />\r\n      <FeaturesV2 data={landingPageData.Features} />\r\n      <FeaturesV2 data={landingPageData.Roadmap} />\r\n      <Features data={landingPageData.Team} />\r\n\r\n      <Contact data={landingPageData.Contact} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}